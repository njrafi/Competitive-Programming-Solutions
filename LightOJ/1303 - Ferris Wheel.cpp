#include <bits/stdc++.h>
#ifndef ONLINE_JUDGE
#define gc getchar
#define pc putchar
#else
#define gc getchar_unlocked
#define pc putchar_unlocked
#endif
using namespace std;
#define vi vector<int>
#define si set<int>
#define vs vector<string>
#define pii pair<int, int>
#define vpi vector<pii>
#define pri priority_queue<int>
#define rev_pri priority_queue<int, vector<int>, greater<int>>
#define mpi map<int, int>
#define i64 long long int
#define endl '\n'
#define pi acos(-1)
#define all(v) v.begin(), v.end()
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define inf INT_MAX / 2
#define infll LLONG_MAX / 3
#define For(i, n) for (int i = 0; i < n; i++)
#define Fre(i, a, b) for (int i = a; i < b; i++)
#define sf(n) scanf("%d", &n)
#define sff(a, b) scanf("%d %d", &a, &b)
#define sfff(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define pfn(n) printf("%d\n", n)
#define pfs(n) printf("%d ", n)
#define eps 1e-8
#define ff first
#define ss second
#define mem(a, b) memset(a, b, sizeof(a))
#define READ freopen("in.txt", "r", stdin)
#define WRITE freopen("out.txt", "w", stdout)
#define sz size()
#define dbg(i) printf("yo %d\n", i)
#define foreach(i, c) for (__typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define sqr(a) (a) * (a)
#define clr clear()
#define CASE(a) printf("Case %d: ", a)
//int dx[] = {0,1,0,-1,1,1,-1,-1};
//int dy[] = {1,0,-1,0,1,-1,-1,1};
//i64 gcd(i64 a,i64 b){if(!b)return a;return gcd(b,a%b);}
//inline void fastRead(int *a){register char c=0;while(c<33)c=gc();*a=0;while(c>33){*a=*a*10+c-'0';c=gc();}}
//inline void fastWrite(int a){char snum[20];int i=0;do{snum[i++]=a%10+48;a=a/10;}while(a!=0);i=i-1;while(i>=0)pc(snum[i--]);pc('\n');}
//i64 bigmod(i64 num,i64 n){if(n==0)return 1;i64 x=bigmod(num,n/2);x=x*x%mod;if(n%2==1)x=x*num%mod;return x;}
//i64 modinverse(i64 num){return bigmod(num,mod-2)%mod;}
//i64 po(i64 a,i64 b){i64 ans=1;while(b--)ans *= a;return ans;}
//i64 ncr(i64 n,i64 r){if(n==r)return 1;if(r==1)return n;if(dp[n][r]!=-1)return dp[n][r];return dp[n][r]=ncr(n-1,r)+ncr(n-1,r-1);}
// bit manipulations
//bool checkbit(int mask,int bit){return mask & (1<<bit);}
//int setbit(int mask,int bit){ return mask  (1<<bit) ; }
//int clearbit(int mask,int bit){return mask & ~(1<<bit);}
//int togglebit(int mask,int bit){return mask ^ (1<<bit);}
short int gg[21][21];
void pre()
{
    gg[1][1] = 10;
    gg[1][2] = 30;
    gg[1][3] = 60;
    gg[1][4] = 100;
    gg[1][5] = 150;
    gg[1][6] = 210;
    gg[1][7] = 280;
    gg[1][8] = 360;
    gg[1][9] = 450;
    gg[1][10] = 550;
    gg[1][11] = 660;
    gg[1][12] = 780;
    gg[1][13] = 910;
    gg[1][14] = 1050;
    gg[1][15] = 1200;
    gg[1][16] = 1360;
    gg[1][17] = 1530;
    gg[1][18] = 1710;
    gg[1][19] = 1900;
    gg[1][20] = 2100;
    gg[2][1] = 15;
    gg[2][2] = 35;
    gg[2][3] = 65;
    gg[2][4] = 105;
    gg[2][5] = 155;
    gg[2][6] = 215;
    gg[2][7] = 285;
    gg[2][8] = 365;
    gg[2][9] = 455;
    gg[2][10] = 555;
    gg[2][11] = 665;
    gg[2][12] = 785;
    gg[2][13] = 915;
    gg[2][14] = 1055;
    gg[2][15] = 1205;
    gg[2][16] = 1365;
    gg[2][17] = 1535;
    gg[2][18] = 1715;
    gg[2][19] = 1905;
    gg[2][20] = 2105;
    gg[3][1] = 20;
    gg[3][2] = 40;
    gg[3][3] = 70;
    gg[3][4] = 110;
    gg[3][5] = 160;
    gg[3][6] = 220;
    gg[3][7] = 290;
    gg[3][8] = 370;
    gg[3][9] = 460;
    gg[3][10] = 560;
    gg[3][11] = 670;
    gg[3][12] = 790;
    gg[3][13] = 920;
    gg[3][14] = 1060;
    gg[3][15] = 1210;
    gg[3][16] = 1370;
    gg[3][17] = 1540;
    gg[3][18] = 1720;
    gg[3][19] = 1910;
    gg[3][20] = 2110;
    gg[4][1] = 25;
    gg[4][2] = 50;
    gg[4][3] = 75;
    gg[4][4] = 115;
    gg[4][5] = 165;
    gg[4][6] = 225;
    gg[4][7] = 295;
    gg[4][8] = 375;
    gg[4][9] = 465;
    gg[4][10] = 565;
    gg[4][11] = 675;
    gg[4][12] = 795;
    gg[4][13] = 925;
    gg[4][14] = 1065;
    gg[4][15] = 1215;
    gg[4][16] = 1375;
    gg[4][17] = 1545;
    gg[4][18] = 1725;
    gg[4][19] = 1915;
    gg[4][20] = 2115;
    gg[5][1] = 30;
    gg[5][2] = 60;
    gg[5][3] = 90;
    gg[5][4] = 120;
    gg[5][5] = 170;
    gg[5][6] = 230;
    gg[5][7] = 300;
    gg[5][8] = 380;
    gg[5][9] = 470;
    gg[5][10] = 570;
    gg[5][11] = 680;
    gg[5][12] = 800;
    gg[5][13] = 930;
    gg[5][14] = 1070;
    gg[5][15] = 1220;
    gg[5][16] = 1380;
    gg[5][17] = 1550;
    gg[5][18] = 1730;
    gg[5][19] = 1920;
    gg[5][20] = 2120;
    gg[6][1] = 35;
    gg[6][2] = 70;
    gg[6][3] = 110;
    gg[6][4] = 140;
    gg[6][5] = 175;
    gg[6][6] = 235;
    gg[6][7] = 305;
    gg[6][8] = 385;
    gg[6][9] = 475;
    gg[6][10] = 575;
    gg[6][11] = 685;
    gg[6][12] = 805;
    gg[6][13] = 935;
    gg[6][14] = 1075;
    gg[6][15] = 1225;
    gg[6][16] = 1385;
    gg[6][17] = 1555;
    gg[6][18] = 1735;
    gg[6][19] = 1925;
    gg[6][20] = 2125;
    gg[7][1] = 40;
    gg[7][2] = 80;
    gg[7][3] = 120;
    gg[7][4] = 160;
    gg[7][5] = 200;
    gg[7][6] = 240;
    gg[7][7] = 310;
    gg[7][8] = 390;
    gg[7][9] = 480;
    gg[7][10] = 580;
    gg[7][11] = 690;
    gg[7][12] = 810;
    gg[7][13] = 940;
    gg[7][14] = 1080;
    gg[7][15] = 1230;
    gg[7][16] = 1390;
    gg[7][17] = 1560;
    gg[7][18] = 1740;
    gg[7][19] = 1930;
    gg[7][20] = 2130;
    gg[8][1] = 45;
    gg[8][2] = 90;
    gg[8][3] = 135;
    gg[8][4] = 180;
    gg[8][5] = 225;
    gg[8][6] = 270;
    gg[8][7] = 315;
    gg[8][8] = 395;
    gg[8][9] = 485;
    gg[8][10] = 585;
    gg[8][11] = 695;
    gg[8][12] = 815;
    gg[8][13] = 945;
    gg[8][14] = 1085;
    gg[8][15] = 1235;
    gg[8][16] = 1395;
    gg[8][17] = 1565;
    gg[8][18] = 1745;
    gg[8][19] = 1935;
    gg[8][20] = 2135;
    gg[9][1] = 50;
    gg[9][2] = 100;
    gg[9][3] = 150;
    gg[9][4] = 200;
    gg[9][5] = 250;
    gg[9][6] = 300;
    gg[9][7] = 350;
    gg[9][8] = 400;
    gg[9][9] = 490;
    gg[9][10] = 590;
    gg[9][11] = 700;
    gg[9][12] = 820;
    gg[9][13] = 950;
    gg[9][14] = 1090;
    gg[9][15] = 1240;
    gg[9][16] = 1400;
    gg[9][17] = 1570;
    gg[9][18] = 1750;
    gg[9][19] = 1940;
    gg[9][20] = 2140;
    gg[10][1] = 55;
    gg[10][2] = 110;
    gg[10][3] = 165;
    gg[10][4] = 220;
    gg[10][5] = 285;
    gg[10][6] = 330;
    gg[10][7] = 385;
    gg[10][8] = 440;
    gg[10][9] = 495;
    gg[10][10] = 595;
    gg[10][11] = 705;
    gg[10][12] = 825;
    gg[10][13] = 955;
    gg[10][14] = 1095;
    gg[10][15] = 1245;
    gg[10][16] = 1405;
    gg[10][17] = 1575;
    gg[10][18] = 1755;
    gg[10][19] = 1945;
    gg[10][20] = 2145;
    gg[11][1] = 60;
    gg[11][2] = 120;
    gg[11][3] = 180;
    gg[11][4] = 240;
    gg[11][5] = 300;
    gg[11][6] = 360;
    gg[11][7] = 420;
    gg[11][8] = 480;
    gg[11][9] = 540;
    gg[11][10] = 600;
    gg[11][11] = 710;
    gg[11][12] = 830;
    gg[11][13] = 960;
    gg[11][14] = 1100;
    gg[11][15] = 1250;
    gg[11][16] = 1410;
    gg[11][17] = 1580;
    gg[11][18] = 1760;
    gg[11][19] = 1950;
    gg[11][20] = 2150;
    gg[12][1] = 65;
    gg[12][2] = 130;
    gg[12][3] = 195;
    gg[12][4] = 260;
    gg[12][5] = 325;
    gg[12][6] = 400;
    gg[12][7] = 455;
    gg[12][8] = 520;
    gg[12][9] = 590;
    gg[12][10] = 650;
    gg[12][11] = 715;
    gg[12][12] = 835;
    gg[12][13] = 965;
    gg[12][14] = 1105;
    gg[12][15] = 1255;
    gg[12][16] = 1415;
    gg[12][17] = 1585;
    gg[12][18] = 1765;
    gg[12][19] = 1955;
    gg[12][20] = 2155;
    gg[13][1] = 70;
    gg[13][2] = 140;
    gg[13][3] = 210;
    gg[13][4] = 280;
    gg[13][5] = 350;
    gg[13][6] = 420;
    gg[13][7] = 490;
    gg[13][8] = 560;
    gg[13][9] = 630;
    gg[13][10] = 700;
    gg[13][11] = 770;
    gg[13][12] = 840;
    gg[13][13] = 970;
    gg[13][14] = 1110;
    gg[13][15] = 1260;
    gg[13][16] = 1420;
    gg[13][17] = 1590;
    gg[13][18] = 1770;
    gg[13][19] = 1960;
    gg[13][20] = 2160;
    gg[14][1] = 75;
    gg[14][2] = 150;
    gg[14][3] = 225;
    gg[14][4] = 300;
    gg[14][5] = 375;
    gg[14][6] = 450;
    gg[14][7] = 530;
    gg[14][8] = 600;
    gg[14][9] = 675;
    gg[14][10] = 750;
    gg[14][11] = 825;
    gg[14][12] = 900;
    gg[14][13] = 975;
    gg[14][14] = 1115;
    gg[14][15] = 1265;
    gg[14][16] = 1425;
    gg[14][17] = 1595;
    gg[14][18] = 1775;
    gg[14][19] = 1965;
    gg[14][20] = 2165;
    gg[15][1] = 80;
    gg[15][2] = 160;
    gg[15][3] = 240;
    gg[15][4] = 320;
    gg[15][5] = 400;
    gg[15][6] = 480;
    gg[15][7] = 560;
    gg[15][8] = 640;
    gg[15][9] = 720;
    gg[15][10] = 800;
    gg[15][11] = 880;
    gg[15][12] = 960;
    gg[15][13] = 1040;
    gg[15][14] = 1120;
    gg[15][15] = 1270;
    gg[15][16] = 1430;
    gg[15][17] = 1600;
    gg[15][18] = 1780;
    gg[15][19] = 1970;
    gg[15][20] = 2170;
    gg[16][1] = 85;
    gg[16][2] = 170;
    gg[16][3] = 255;
    gg[16][4] = 340;
    gg[16][5] = 425;
    gg[16][6] = 510;
    gg[16][7] = 595;
    gg[16][8] = 680;
    gg[16][9] = 765;
    gg[16][10] = 850;
    gg[16][11] = 935;
    gg[16][12] = 1020;
    gg[16][13] = 1105;
    gg[16][14] = 1190;
    gg[16][15] = 1275;
    gg[16][16] = 1435;
    gg[16][17] = 1605;
    gg[16][18] = 1785;
    gg[16][19] = 1975;
    gg[16][20] = 2175;
    gg[17][1] = 90;
    gg[17][2] = 180;
    gg[17][3] = 270;
    gg[17][4] = 360;
    gg[17][5] = 450;
    gg[17][6] = 540;
    gg[17][7] = 630;
    gg[17][8] = 720;
    gg[17][9] = 810;
    gg[17][10] = 900;
    gg[17][11] = 990;
    gg[17][12] = 1080;
    gg[17][13] = 1170;
    gg[17][14] = 1260;
    gg[17][15] = 1350;
    gg[17][16] = 1440;
    gg[17][17] = 1610;
    gg[17][18] = 1790;
    gg[17][19] = 1980;
    gg[17][20] = 2180;
    gg[18][1] = 95;
    gg[18][2] = 190;
    gg[18][3] = 285;
    gg[18][4] = 380;
    gg[18][5] = 475;
    gg[18][6] = 570;
    gg[18][7] = 665;
    gg[18][8] = 760;
    gg[18][9] = 895;
    gg[18][10] = 950;
    gg[18][11] = 1045;
    gg[18][12] = 1140;
    gg[18][13] = 1235;
    gg[18][14] = 1330;
    gg[18][15] = 1430;
    gg[18][16] = 1520;
    gg[18][17] = 1615;
    gg[18][18] = 1795;
    gg[18][19] = 1985;
    gg[18][20] = 2185;
    gg[19][1] = 100;
    gg[19][2] = 200;
    gg[19][3] = 300;
    gg[19][4] = 400;
    gg[19][5] = 500;
    gg[19][6] = 600;
    gg[19][7] = 700;
    gg[19][8] = 800;
    gg[19][9] = 900;
    gg[19][10] = 1000;
    gg[19][11] = 1100;
    gg[19][12] = 1200;
    gg[19][13] = 1300;
    gg[19][14] = 1400;
    gg[19][15] = 1500;
    gg[19][16] = 1600;
    gg[19][17] = 1700;
    gg[19][18] = 1800;
    gg[19][19] = 1990;
    gg[19][20] = 2190;
    gg[20][1] = 105;
    gg[20][2] = 210;
    gg[20][3] = 315;
    gg[20][4] = 420;
    gg[20][5] = 530;
    gg[20][6] = 630;
    gg[20][7] = 735;
    gg[20][8] = 840;
    gg[20][9] = 945;
    gg[20][10] = 1080;
    gg[20][11] = 1155;
    gg[20][12] = 1260;
    gg[20][13] = 1365;
    gg[20][14] = 1470;
    gg[20][15] = 1630;
    gg[20][16] = 1680;
    gg[20][17] = 1785;
    gg[20][18] = 1890;
    gg[20][19] = 1995;
    gg[20][20] = 2195;
}
int main()
{
    pre();
    int t, cs = 1, n, m;
    sf(t);
    while (t--)
    {
        sff(n, m);
        CASE(cs++);
        pfn(gg[n][m]);
    }
    return 0;
}
